{"version":3,"sources":["components/representational/Book.js","components/lists/BookList.js","assets/books.js","components/representational/NewBook.js","components/representational/BookDetail.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","props","className","onClick","selectedBookHandler","bookName","writer","BookList","this","books","map","book","index","to","id","style","textDecoration","color","Component","description","NewBook","console","log","BookDetail","MainComponent","state","bookList","selectedBook","bookId","filter","setState","exact","path","render","component","from","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"uRAgBeA,eAZF,SAACC,GACV,OACI,sBAAKC,UAAU,OAAOC,QAASF,EAAMG,oBAArC,UACI,wCAAYH,EAAMI,SAAlB,OACA,0CAAaJ,EAAMK,OAAnB,a,OCHNC,E,4JACJ,WAAU,IAAD,OAEP,OACEC,KAAKP,MAAMQ,MAAMC,KAAI,SAACC,EAAMC,GAC1B,OACE,cAAC,IAAD,CAAMC,GAAI,IAAMF,EAAKG,GAAIC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,SAAjE,SACE,cAAC,EAAD,CACEZ,SAAUM,EAAKN,SACfC,OAAQK,EAAKL,OAEbF,oBAAqB,kBAAM,EAAKH,MAAMG,oBAAoBO,EAAKG,MAD1DH,EAAKG,a,GAVDI,aAsBRlB,cAAWO,GCsBXE,EAjDD,CACZ,CACEK,GAAI,EACJT,SAAU,OACVC,OAAQ,gBACRa,YAAY,6/EAMd,CACEL,GAAI,EACJT,SAAU,oBACVC,OAAQ,YACRa,YAAY,6jFAcd,CACEL,GAAI,EACJT,SAAU,gBACVC,OAAQ,eACRa,YAAY,mkFAMd,CACEL,GAAI,EACJT,SAAU,cACVC,OAAQ,gBACRa,YAAY,iuEC/BDC,EAVC,SAAAnB,GAEZ,OADAoB,QAAQC,IAAIrB,GAER,8BACI,mDCOGsB,EAXI,SAAAtB,GAEf,OADAoB,QAAQC,IAAIrB,GACM,MAAdA,EAAMU,KAAqB,wBAE3B,gCACI,6BAAKV,EAAMU,KAAKN,WAChB,6BAAKJ,EAAMU,KAAKL,SAChB,4BAAIL,EAAMU,KAAKQ,kBC0CZK,E,4MA3CbC,MAAQ,CACNhB,MAAOiB,EACPC,aAAc,M,EAGhBvB,oBAAsB,SAAAwB,GACpB,IAAMjB,EAAO,EAAKc,MAAMhB,MAAMoB,QAAO,SAAAlB,GAAI,OACvCA,EAAKG,KAAOc,KAAQ,GACtB,EAAKE,SAAS,CACZH,aAAchB,K,4CAIlB,WAAU,IAAD,OAKDF,EAAQ,cAAC,EAAD,CACZA,MAAOD,KAAKiB,MAAMhB,MAClBL,oBAAqBI,KAAKJ,sBAI5B,OACE,sBAAKF,UAAU,MAAf,UACE,qBAAKA,UAAU,UAAf,SACE,+BACE,6BAAI,cAAC,IAAD,CAASW,GAAG,SAASkB,OAAK,EAA1B,sBACJ,6BAAI,cAAC,IAAD,CAASlB,GAAG,YAAZ,6BAGR,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,KAAK,SAASD,OAAK,EAACE,OAAQ,kBAAMxB,KACzC,cAAC,IAAD,CAAOuB,KAAK,YAAYD,OAAK,EAACG,UAAWd,IACzC,cAAC,IAAD,CAAOY,KAAK,OAAOC,OAAQ,kBAAM,cAAC,EAAD,CAAYtB,KAAM,EAAKc,MAAME,kBAC9D,cAAC,IAAD,CAAUQ,KAAK,IAAItB,GAAG,qB,GArCJK,aCQbkB,EARH,WACV,OACE,cAAC,IAAD,UACE,cAAC,EAAD,OCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASb,OAAO,cAAC,EAAD,IAASc,SAASC,eAAe,SAKjDX,M","file":"static/js/main.d231e410.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../stylesheets/Book.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst Book = (props) => {\r\n    return (\r\n        <div className=\"Book\" onClick={props.selectedBookHandler} >\r\n            <h3 >Book: {props.bookName} </h3>\r\n            <h3>Writer: {props.writer} </h3>\r\n\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default withRouter(Book);","import React, { Component } from 'react';\r\nimport Book from '../representational/Book';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass BookList extends Component {\r\n  render() {\r\n\r\n    return (\r\n      this.props.books.map((book, index) => {\r\n        return (\r\n          <Link to={\"/\" + book.id} style={{ textDecoration: 'none', color: 'black' }}>\r\n            <Book\r\n              bookName={book.bookName}\r\n              writer={book.writer}\r\n              key={book.id}\r\n              selectedBookHandler={() => this.props.selectedBookHandler(book.id)}\r\n\r\n            />\r\n          </Link>\r\n\r\n        );\r\n      })\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(BookList);","const books = [\r\n  {\r\n    id: 1,\r\n    bookName: \"1984\",\r\n    writer: \"George Orwell\",\r\n    description: `The book is set in 1984 in Oceania, one of three perpetually warring totalitarian states (the other two are Eurasia and Eastasia). Oceania is governed by the all-controlling Party, which has brainwashed the population into unthinking obedience to its leader, Big Brother. The Party has created a propagandistic language known as Newspeak, which is designed to limit free thought and promote the Party’s doctrines. Its words include doublethink (belief in contradictory ideas simultaneously), which is reflected in the Party’s slogans: “War is peace,” “Freedom is slavery,” and “Ignorance is strength.” The Party maintains control through the Thought Police and continual surveillance.\r\n\r\n      The book’s hero, Winston Smith, is a minor party functionary living in a London that is still shattered by a nuclear war that took place not long after World War II. He belongs to the Outer Party, and his job is to rewrite history in the Ministry of Truth, bringing it in line with current political thinking. However, Winston’s longing for truth and decency leads him to secretly rebel against the government. He embarks on a forbidden affair with Julia, a like-minded woman, and they rent a room in a neighbourhood populated by Proles (short for proletariats). Winston also becomes increasingly interested in the Brotherhood, a group of dissenters. Unbeknownst to Winston and Julia, however, they are being watched closely (ubiquitous posters throughout the city warn residents that “Big Brother is watching you.”).\r\n      \r\n      When Winston is approached by O’Brien—an official of the Inner Party who appears to be a secret member of the Brotherhood—the trap is set. O’Brien is actually a spy for the Party, on the lookout for “thought-criminals,” and Winston and Julia are eventually caught and sent to the Ministry of Love for a violent reeducation. The ensuing imprisonment, torture, and reeducation of Winston are intended not merely to break him physically or make him submit but to root out his independence and destroy his dignity and humanity. In Room 101, where prisoners are forced into submission by exposure to their worst nightmares, Winston panics as a cage of rats is attached to his head. He yells out for his tormentors to “Do it to Julia!” and states that he does not care what happens to her. With this betrayal, Winston is released. He later encounters Julia, and neither is interested in the other. Instead Winston loves Big Brother.`,\r\n  },\r\n  {\r\n    id: 2,\r\n    bookName: \"The Da Vinci Code\",\r\n    writer: \"Dan Brown\",\r\n    description: `Louvre curator and Priory of Sion grand master Jacques Saunière is fatally shot one night at the museum by an albino Catholic monk named Silas, who is working on behalf of someone he knows only as the Teacher, who wishes to discover the location of the \"keystone,\" an item crucial in the search for the Holy Grail.\r\n\r\n      After Saunière's body is discovered in the pose of the Vitruvian Man by Leonardo da Vinci, the police summon Harvard professor Robert Langdon, who is in town on business. Police captain Bezu Fache tells him that he was summoned to help the police decode the cryptic message Saunière left during the final minutes of his life. The message includes a Fibonacci sequence out of order.\r\n      \r\n      Langdon explains to Fache that Saunière was a leading authority on the subject of goddess artwork and that the pentacle Saunière drew on his chest in his own blood represents an allusion to the goddess and not devil worship, as Fache believes.\r\n      \r\n      Sophie Neveu, a police cryptographer, secretly explains to Langdon that she is Saunière's estranged granddaughter, and that Fache thinks Langdon is the murderer because the last line in her grandfather's message, which was meant for Neveu, said \"P.S. Find Robert Langdon,\" which Fache had erased prior to Langdon's arrival. However, \"P.S.\" actually refers to Sophie, as the nickname given to her by her grandfather is \"Princess Sophie\". It does not refer to \"postscript\". Neveu is troubled by memories of her grandfather's involvement in a secret pagan group. However, she understands that her grandfather intended Langdon to decipher the code, which leads them to a safe deposit box at the Paris branch of the Depository Bank of Zurich.\r\n      \r\n      \r\n      Replica cryptex: prize from Google Da Vinci Code Quest Contest\r\n      Neveu and Langdon escape from the police and visit the bank. In the safe deposit box they find a box containing the keystone: a cryptex, a cylindrical, hand-held vault with five concentric, rotating dials labeled with letters. When these are lined up correctly, they unlock the device. If the cryptex is forced open, an enclosed vial of vinegar breaks and dissolves the message inside the cryptex, which was written on papyrus. The box containing the cryptex contains clues to its password.\r\n      \r\n      Langdon and Neveu take the keystone to the home of Langdon's friend, Sir Leigh Teabing, an expert on the Holy Grail, the legend of which is heavily connected to the Priory. There, Teabing explains that the Grail is not a cup, but a tomb containing the bones of Mary Magdalene.`\r\n  },\r\n  {\r\n    id: 3,\r\n    bookName: \"The Alchemist\",\r\n    writer: \"Paulo Coelho\",\r\n    description: `A recurring dream troubles Santiago, a young and adventurous Andalusian shepherd. He has the dream every time he sleeps under a sycamore tree that grows out of the ruins of a church. During the dream, a child tells him to seek treasure at the foot of the Egyptian pyramids. Santiago consults a gypsy woman to interpret the dream, and to his surprise she tells him to go to Egypt. A strange, magical old man named Melchizedek, who claims to be the King of Salem, echoes the gypsy’s advice and tells Santiago that it is his Personal Legend to journey to the pyramids. Melchizedek convinces Santiago to sell his flock and set off to Tangier. When Santiago arrives in Tangier, a thief robs him, forcing him to find work with a local crystal merchant. The conservative and kindly merchant teaches Santiago several lessons, and Santiago encourages the merchant to take risks with his business. The risks pay off, and Santiago becomes a rich man in just a year.\r\n\r\n      Santiago decides to cash in his earnings and continue pursuing his Personal Legend: to find treasure at the pyramids. He joins a caravan crossing the Sahara desert toward Egypt and meets an Englishman who is studying to become an alchemist. He learns a lot from the Englishman during the journey. For one, he learns that the secret of alchemy is written on a stone called the Emerald Tablet. The ultimate creation of alchemy is the Master Work, which consists of a solid called the Philosophers Stone that can turn lead to gold, and a liquid called the Elixir of Life that can cure all ills. Santiago learns the Englishman is traveling with the caravan to the Saharan oasis of Al-Fayoum, where a powerful, 200-year-old alchemist resides. The Englishman plans to ask the alchemist the secret of his trade.\r\n      \r\n      As it turns out, the caravan must make an extended stop in Al-Fayoum in order to avoid increasingly violent tribal wars taking place in the desert. There, Santiago falls in love with Fatima, who lives at the oasis. During a walk in the desert, Santiago witnesses an omen that portends an attack on the historically neutral oasis. He warns the tribal chieftains of the attack, and as a result, Al-Fayoum successfully defends itself against the assault. The alchemist gets word of Santiago’s vision and invites Santiago on a trip into the desert, during which he teaches Santiago about the importance of listening to his heart and pursuing his Personal Legend. He convinces Santiago to leave Fatima and the caravan for the time to finish his journey to the pyramids, and he offers to accompany Santiago on the next leg of his trip.`\r\n  },\r\n  {\r\n    id: 4,\r\n    bookName: \"Animal Farm\",\r\n    writer: \"George Orwell\",\r\n    description: `Old Major, a prize-winning boar, gathers the animals of the Manor Farm for a meeting in the big barn. He tells them of a dream he has had in which all animals live together with no human beings to oppress or control them. He tells the animals that they must work toward such a paradise and teaches them a song called “Beasts of England,” in which his dream vision is lyrically described. The animals greet Major’s vision with great enthusiasm. When he dies only three nights after the meeting, three younger pigs—Snowball, Napoleon, and Squealer—formulate his main principles into a philosophy called Animalism. Late one night, the animals manage to defeat the farmer Mr. Jones in a battle, running him off the land. They rename the property Animal Farm and dedicate themselves to achieving Major’s dream. The cart-horse Boxer devotes himself to the cause with particular zeal, committing his great strength to the prosperity of the farm and adopting as a personal maxim the affirmation “I will work harder.”\r\n\r\n      At first, Animal Farm prospers. Snowball works at teaching the animals to read, and Napoleon takes a group of young puppies to educate them in the principles of Animalism. When Mr. Jones reappears to take back his farm, the animals defeat him again, in what comes to be known as the Battle of the Cowshed, and take the farmer’s abandoned gun as a token of their victory. As time passes, however, Napoleon and Snowball increasingly quibble over the future of the farm, and they begin to struggle with each other for power and influence among the other animals. Snowball concocts a scheme to build an electricity-generating windmill, but Napoleon solidly opposes the plan. At the meeting to vote on whether to take up the project, Snowball gives a passionate speech. Although Napoleon gives only a brief retort, he then makes a strange noise, and nine attack dogs—the puppies that Napoleon had confiscated in order to “educate”—burst into the barn and chase Snowball from the farm. Napoleon assumes leadership of Animal Farm and declares that there will be no more meetings. From that point on, he asserts, the pigs alone will make all of the decisions—for the good of every animal.`\r\n  }\r\n]\r\n\r\nexport default books;","import React from 'react';\r\n\r\nconst NewBook = props => {\r\n    console.log(props)\r\n    return (\r\n        <div>\r\n            <h1>New Book Entry</h1>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NewBook;","import React from 'react';\r\n\r\nconst BookDetail = props => {\r\n    console.log(props);\r\n    if (props.book == null) return <div></div>\r\n    return (\r\n        <div>\r\n            <h1>{props.book.bookName}</h1>\r\n            <h3>{props.book.writer}</h3>\r\n            <p>{props.book.description}</p>\r\n        </div>\r\n    );\r\n}\r\nexport default BookDetail;","import React, { Component } from 'react';\r\nimport BookList from './lists/BookList'\r\nimport bookList from '../assets/books'\r\nimport NewBook from './representational/NewBook';\r\nimport BookDetail from './representational/BookDetail'\r\nimport { Route, NavLink, Switch, Redirect } from 'react-router-dom';\r\n\r\nclass MainComponent extends Component {\r\n  state = {\r\n    books: bookList,\r\n    selectedBook: null\r\n\r\n  }\r\n  selectedBookHandler = bookId => {\r\n    const book = this.state.books.filter(book =>\r\n      book.id === bookId)[0];\r\n    this.setState({\r\n      selectedBook: book\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n    //const booksState = this.state.books;\r\n\r\n    const books = <BookList\r\n      books={this.state.books}\r\n      selectedBookHandler={this.selectedBookHandler}\r\n    />\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <nav className=\"nav-bar\" >\r\n          <ul>\r\n            <li><NavLink to=\"/books\" exact>  Home</NavLink></li>\r\n            <li><NavLink to=\"/new-book\">New Book</NavLink></li>\r\n          </ul>\r\n        </nav>\r\n        <Switch>\r\n          <Route path=\"/books\" exact render={() => books} />\r\n          <Route path=\"/new-book\" exact component={NewBook} />\r\n          <Route path=\"/:id\" render={() => <BookDetail book={this.state.selectedBook} />} />\r\n          <Redirect from=\"/\" to=\"/books\" />\r\n        </Switch>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainComponent;","import React from 'react';\nimport './App.css';\n\nimport MainComponent from './components/MainComponent'\nimport { BrowserRouter } from 'react-router-dom';\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <MainComponent />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}